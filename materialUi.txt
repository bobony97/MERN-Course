PAGINA: https://mui.com/material-ui/guides/minimizing-bundle-size/#development-environment.
instalacion: yarn add @mui/material @emotion/react @emotion/styled

CONFIGURACION{
    Para terminar de configurar material ui necesitamos utilizar el provider envolviendo el/los componentes que queremos estilizar.
    Recomendado utilizar un "theme" con el componente de configuracion para la estilizacion global 

    import { ThemeProvider } from '@emotion/react';
    import { CssBaseline } from '@mui/material';

    export const AppTheme = ({ children }) => {
        return (
            ThemeProvider es un componente proporcionado por Material-UI que permite aplicar un tema personalizado a toda la aplicación
            <ThemeProvider theme={ purpleTheme }> El prop theme que se le pasa especifica el objeto de tema que contiene las configuraciones de colores, tipografía, espaciado y otros estilos utilizados en la aplicación
                <CssBaseline /> Es otro componente de Material-UI que se utiliza para establecer un estilo base consistente en toda la aplicación. Esto incluye la normalización de estilos CSS 
                                -y la configuración de márgenes y rellenos predeterminados para los elementos HTML.
                { children }
            </ThemeProvider>
            Luego se utiliza el componente creado "AppTheme" para envolver algun componente de alto orden/jerarquia como el AppComponent
        )
    }

    UN EJEMPLO DE LA PROP "THEME"
    import { createTheme } from "@mui/material";  Se utiliza para crear temas personalizados.
    import { red } from "@mui/material/colors";  Importa la paleta de colores predefinida de Material-UI, específicamente el color rojo

    export const purpleTheme = createTheme({
        palette: { En el objeto del tema, palette se utiliza para definir la paleta de colores del tema
            primary: { Aquí, estás especificando el color principal
            main: "#262254",
            },
            secondary: {  color secundario 
            main: "#543884",
            },
            error: { y color de error
            main: red.A400, Dentro de cada color, main se utiliza para especificar el color principal que deseas utilizar
            },
        },
    });
}



DOCU{
    *<Typography variant='h1' >JournalPage</Typography>: Es un componente versátil que permite mostrar texto con diferentes estilos, como encabezados, párrafos, texto destacado, etc. 
    -Ayuda a mantener la consistencia y el estilo en toda la aplicación.
    *variant='h1': El prop variant se utiliza para especificar el estilo tipográfico que deseas aplicar al texto. En este caso, estás usando 'h1' como valor de variant, 
    -lo que indica que quieres que el texto se muestre como un encabezado de nivel 1 (h1).

    
}
