PAGINA: https://mui.com/material-ui/guides/minimizing-bundle-size/#development-environment.
instalacion: yarn add @mui/material @emotion/react @emotion/styled

CONFIGURACION{
    Para terminar de configurar material ui necesitamos utilizar el provider envolviendo el/los componentes que queremos estilizar.
    Recomendado utilizar un "theme" con el componente de configuracion para la estilizacion global 

    import { ThemeProvider } from '@emotion/react';
    import { CssBaseline } from '@mui/material';

    export const AppTheme = ({ children }) => {
        return (
            ThemeProvider es un componente proporcionado por Material-UI que permite aplicar un tema personalizado a toda la aplicación
            <ThemeProvider theme={ purpleTheme }> El prop theme que se le pasa especifica el objeto de tema que contiene las configuraciones de colores, tipografía, espaciado y otros estilos utilizados en la aplicación
                <CssBaseline /> Es otro componente de Material-UI que se utiliza para establecer un estilo base consistente en toda la aplicación. Esto incluye la normalización de estilos CSS 
                                -y la configuración de márgenes y rellenos predeterminados para los elementos HTML.
                { children }
            </ThemeProvider>
            Luego se utiliza el componente creado "AppTheme" para envolver algun componente de alto orden/jerarquia como el AppComponent
        )
    }

    UN EJEMPLO DE LA PROP "THEME"
    import { createTheme } from "@mui/material";  Se utiliza para crear temas personalizados.
    import { red } from "@mui/material/colors";  Importa la paleta de colores predefinida de Material-UI, específicamente el color rojo

    export const purpleTheme = createTheme({
        palette: { En el objeto del tema, palette se utiliza para definir la paleta de colores del tema
            primary: { Aquí, estás especificando el color principal
            main: "#262254",
            },
            secondary: {  color secundario 
            main: "#543884",
            },
            error: { y color de error
            main: red.A400, Dentro de cada color, main se utiliza para especificar el color principal que deseas utilizar
            },
        },
    });
}



DOCU{
    *<Typography variant='h1' >JournalPage</Typography>: Es un componente versátil que permite mostrar texto con diferentes estilos, como encabezados, párrafos, texto destacado, etc. 
    -Ayuda a mantener la consistencia y el estilo en toda la aplicación.
    *variant='h1': El prop variant se utiliza para especificar el estilo tipográfico que deseas aplicar al texto. En este caso, estás usando 'h1' como valor de variant, 
    -lo que indica que quieres que el texto se muestre como un encabezado de nivel 1 (h1).

    COMPONENTES:
    <Grid></Grid>: Es un componente de diseño que facilita la creación de diseños flexibles y responsivos utilizando una estructura de cuadrícula


    PROPIEDADES:

    Propiedades de cajas:
        backgroundColor: Color de fondo de la caja.
        color: Color del texto dentro de la caja.
        border: Propiedades del borde de la caja.
            borderWidth: Ancho del borde.
            borderColor: Color del borde.
            borderStyle: Estilo del borde (por ejemplo, "solid", "dashed", "dotted").
            borderRadius: Radio de borde para esquinas redondeadas de la caja.
        boxShadow: Sombra aplicada a la caja.
        padding: Espacio interior de la caja.
            paddingTop: Espacio interior en la parte superior.
            paddingRight: Espacio interior en la parte derecha.
            paddingBottom: Espacio interior en la parte inferior.
            paddingLeft: Espacio interior en la parte izquierda.
        margin: Margen exterior de la caja.
            marginTop: Margen en la parte superior.
            marginRight: Margen en la parte derecha.
            marginBottom: Margen en la parte inferior.
            marginLeft: Margen en la parte izquierda.
        width: Ancho de la caja.
        height: Altura de la caja.
        display: Tipo de visualización de la caja (por ejemplo, "block", "inline-block", "flex").


    Propiedades generales:
        sx: Para aplicar estilos personalizados en línea al componente. Ej sx={{ minWidth: '100vh', padding: 4 }}
        className: Para asignar clases CSS adicionales al componente.
        id: Para establecer un identificador único para el componente.
        style: Para aplicar estilos directamente al componente.

    Propiedades de diseño:
        alignItems: Alineación de elementos secundarios en un contenedor.
        justifyContent: Alineación de elementos secundarios a lo largo del eje principal de un contenedor.
        spacing: Espaciado entre elementos en un contenedor <Grid>.
        direction: Dirección de los elementos hijos en un contenedor <Grid> (por ejemplo, "row", "column").
        flex: Propiedades flexibles para el diseño (por ejemplo, flexGrow, flexShrink, flexBasis).

    Propiedades de estilo:
        color: Color del texto o de los elementos.
        backgroundColor: Color de fondo.
        fontSize: Tamaño de la fuente.
        fontWeight: Grosor de la fuente.
        border: Propiedades del borde (por ejemplo, borderWidth, borderColor, borderStyle).
        borderRadius: Radio de borde para esquinas redondeadas.
        boxShadow: Sombra del componente.
        padding: Relleno interior del componente.
        margin: Margen exterior del componente.
        width: Ancho del componente.
        height: Altura del componente.

    Propiedades de comportamiento:
        disabled: Para deshabilitar la interacción con el componente.
        onClick: Evento que se dispara al hacer clic en el componente.
        onChange: Evento que se dispara al cambiar el valor de un componente (por ejemplo, en un campo de entrada).

    Propiedades específicas de componentes:
        label: Para definir la etiqueta de un componente como un <TextField> o <Button>.
        variant: Para definir la variante de un componente (por ejemplo, "outlined", "contained", "text" en <Button>).
        value: Valor de un componente (por ejemplo, en un <TextField> o <Select>).
        defaultValue: Valor predeterminado de un componente (por ejemplo, en un <TextField> o <Select>).


    TAMAÑOS DE PANTALLA
    Extra pequeño (XS):
    Dispositivos móviles pequeños como smartphones en orientación vertical.
    Ancho típico: Menos de 600 píxeles.
    Pequeño (SM):
    Dispositivos móviles en orientación horizontal y tablets en orientación vertical.
    Ancho típico: De 600 a 959 píxeles.
    Mediano (MD):
    Tablets en orientación horizontal y monitores de tamaño mediano.
    Ancho típico: De 960 a 1279 píxeles.
    Grande (LG):
    Monitores de tamaño grande y laptops.
    Ancho típico: De 1280 a 1919 píxeles.
    Extra grande (XL):
    Monitores de alta resolución y pantallas grandes.
    Ancho típico: 1920 píxeles o más.

}
